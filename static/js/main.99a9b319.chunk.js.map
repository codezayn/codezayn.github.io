{"version":3,"sources":["zaplogo.png","App.js","reportWebVitals.js","index.js"],"names":["App","initNumber","Math","ceil","random","useState","answer","setAnswer","left","setLeft","right","setRight","className","src","logo","alt","onSubmit","evt","preventDefault","cerectAnswer","toString","alert","name","type","value","onChange","e","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yKAAe,MAA0B,oC,eC6C1BA,MAxCf,WACE,IAAIC,EAAa,kBAAMC,KAAKC,KAAqB,GAAhBD,KAAKE,WAEtC,EAA4BC,qBAA5B,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAwBF,mBAASJ,KAAjC,mBAAOO,EAAP,KAAaC,EAAb,KACA,EAA0BJ,mBAASJ,KAAnC,mBAAOS,EAAP,KAAcC,EAAd,KAmBA,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SAEzC,mBAAGH,UAAW,UAAd,4BAEA,uBAAMI,SAxBS,SAACC,GACpBA,EAAIC,iBAEJ,IAAIC,EAAeX,EAAOE,EAEtBJ,EAAOc,aAAeD,EAAaC,YACrCC,MAAM,kBAAD,OAAmBf,IACxBG,EAAQR,KACRU,EAASV,KACTM,EAAU,KAEVc,MAAM,6BAaJ,UACKb,EADL,MACcE,EADd,MACuB,uBAAOY,KAAM,SAAUC,KAAM,OAAQC,MAAOlB,EAAQmB,SAAU,SAAAC,GAAC,OAAInB,EAAUmB,EAAEC,OAAOH,UAC3G,uBAAOD,KAAK,SAASC,MAAM,oBC1BtBI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.99a9b319.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/zaplogo.55872f8b.png\";","import logo from './zaplogo.png';\nimport './App.css';\nimport React, { useState } from 'react';\n\n\nfunction App() {\n  let initNumber = () => Math.ceil(Math.random() * 12);\n\n  const [answer, setAnswer] = useState();\n  const [left, setLeft] = useState(initNumber());\n  const [right, setRight] = useState(initNumber());\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n\n    var cerectAnswer = left * right\n\n    if (answer.toString() === cerectAnswer.toString()) {\n      alert(`Correct answer ${answer}`)\n      setLeft(initNumber())\n      setRight(initNumber())\n      setAnswer('')\n    } else {\n      alert('that is the wrong answer')\n    }\n\n\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n\n        <p className={'welcome'}>welcome to zap</p>\n\n        <form onSubmit={handleSubmit}>\n            {left} x {right} = <input name={'answer'} type={'text'} value={answer} onChange={e => setAnswer(e.target.value)}/>\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}